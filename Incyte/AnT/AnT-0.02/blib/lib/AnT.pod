=head1 NAME

AnT - simple OO Perl modules for sequence analysis and annotation

=head1 SYNOPSIS

N/A

=head1 DESCRIPTION

AnT stands for Annotation Tool (or maybe A nucleoTide). They are
general purpose OO Perl libraries for sequence and feature
manipulation. Features include:

Sequence IO

EMBL (including fuzzy ranges)
Genbank to follow
Fasta

Sequence (DNA/RNA/protein) objects

    Simple composition methods (residue count, codon count,MWt.)
    Reverse-complementing (including treatment of attached features)
    Subsequence extraction (including treatment of attached features)

=item Generic sequence feature objects

    Access to features keys and qualifiers
    Access to feature sequence and translation
    Simple composition methods (residue count, codon count, MWt.)

Search program output parsing

    Lightweight BlastN/P/X (NCBI/WU, v1 & v2) parser
    Fasta output parser

These modules play fast-and-loose with EMBL format, so don't expect
anything except AC, ID, DE, OS, FT and SQ to be preserved. They allow
features without sequence as well as sequence without features. They
also respect feature tables without any ID line. If you need full
treatment of EMBL format, I suggest you use Bioperl.

The modules were written as learning exercise and to produce a set of
classes which are organised in a way which fits more effectively our
other resources than Bioperl. I'm not a programmer, so don't expect
any exemplary OO technique!  Note that this is a home/free-time
project and therefore they are not supported.

=head1 INSTALLATION

AnT uses the standard Perl installation system:

  perl Makefile.PL
  make
  make test
  make install

At the moment there are no tests included. These will be added when I
have the time.

=head1 ACKNOWLEDGEMENTS

These modules incorporate some ideas from Bioperl, but not much actual
code. Code and bug-fixes have been contributed by members of the
Pathogen Sequencing Unit at the Sanger Centre.

=head1 COPYRIGHT

Copyright (C) 2000 Keith James. All Rights Reserved.

=head1 DISCLAIMER

These modules are provided "as is" without warranty of any kind. It
may be used, redistributed and/or modified under the same conditions
as Perl itself.

=cut
