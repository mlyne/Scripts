#!/usr/local/bin/perl5

########################################################################
# Author:  I. Dan Melamed
# Computes:     word stems, by removing inflectional suffixes
# Loads:        suffix list and whole text
#######################################################################

$TRUE = 1;
$FALSE = 0;
$INFINITY = 9999999999;
$TINY = 1 - $INFINITY / ($INFINITY + 1);
$| = 1;

#check for correct usage
if ($#ARGV < 0) {
    print "usage: $0 <suffix list> [<text>]\n";
    exit;
};

# print STDERR "$0: Reading suffix list...";
open(F, $ARGV[0]) || die "Couldn't open $ARGV[0]: $!\n";
while (<F>) {
    chop;
    s/(\W)/\\$1/g;
    push(@search, "s/$_(?=[0-9\\-\\.\\,\\:\\!\\?\\(\\)\\[\\]\\\"\\\' ])//gs; s/$_\$//g;");
};
close(F);
shift;
# print STDERR " done.\n";

# remove suffixes from longest to shortest, in case some are
# substrings of others
$search = join("\n", sort {length($b) <=>  length($a)} @search);

undef $/;
$_ = <>;
eval $search;               # this screams
$/ = "\n";                      # put back to normal input delim
 
print;
